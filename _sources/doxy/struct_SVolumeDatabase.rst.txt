.. index:: pair: struct; SVolumeDatabase <typename T>
.. _doxid-structSVolumeDatabase:
.. _cid-svolumedatabase:

struct SVolumeDatabase <typename T>
===================================

.. toctree::
	:hidden:

.. code-block:: cpp
	:class: overview-code-block

	#include <SVolumeDatabase.h>




.. _doxid-structSVolumeDatabase_1a7b12f2e8cdbfd46980a9a8b2f9b02b3a:
.. _cid-svolumedatabase.fields:
.. _doxid-structSVolumeDatabase_1a5e2e29b847a3550a07df242637895a36:
.. _cid-svolumedatabase.allocate:
.. _doxid-structSVolumeDatabase_1a7eb9243a9f99a0020bdcefc3186c337e:
.. _cid-svolumedatabase.addfield:
.. _doxid-structSVolumeDatabase_1a9ff331b2cb06f57bd586e5764fa937fc:
.. _cid-svolumedatabase.hasfield:
.. _doxid-structSVolumeDatabase_1a9ae272bbaa810d4e9e5b03fb20edb495:
.. _cid-svolumedatabase.getfieldrange:
.. _doxid-structSVolumeDatabase_1aa5968de7664c41102d1612514242bb18:
.. _cid-svolumedatabase.makeopenglvolume:
.. _doxid-structSVolumeDatabase_1aa94940cf8422675566ddda3ecac192a7:
.. _cid-svolumedatabase.writetofile:
.. _doxid-structSVolumeDatabase_1ac78c715ddf2a5a3d72acdaad415b3d9a:
.. _cid-svolumedatabase.readfromfile:
.. ref-code-block:: cpp
	:class: overview-code-block

	// fields

	std::vector <std::string> Fields

	// methods

	void Allocate ()
	void AddField (std::string const& Field)
	bool HasField (std::string const& Field)

	:ref:`SRange<doxid-structSRange>` <T> GetFieldRange (
	    std::string const& Field,
	    T const OutlierCutoff = 5,
	    :ref:`SRange<doxid-structSRange>` <T> const& acceptedValues = :ref:`SRange<doxid-structSRange>` <T>::Full
	    )

	void MakeOpenGLVolume (
	    :ref:`u32<doxid-ionTypes_8h_1a3a310cdfa4b079e559e07e819c06498d>` const VolumeHandle,
	    :ref:`IColorMapper<doxid-classIColorMapper>`* ColorMapper
	    )

	void WriteToFile (std::ofstream& File)
	void ReadFromFile (std::ifstream& File)

