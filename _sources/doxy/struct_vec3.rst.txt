.. index:: pair: struct; vec3 <typename T>
.. _doxid-structvec3:
.. _cid-vec3:

struct vec3 <typename T>
========================

.. toctree::
	:hidden:

.. code-block:: cpp
	:class: overview-code-block

	#include <SVector3.h>


Overview
~~~~~~~~



.. _doxid-structvec3_1a1947e8773ee572e9e519a272d7d8ecb6:
.. _cid-vec3.x:
.. _doxid-structvec3_1a9d4d31cf62d821f4c4e5dc19e67e4ed5:
.. _cid-vec3.y:
.. _doxid-structvec3_1a63450d4fb413423d6922ccded4d8e22a:
.. _cid-vec3.z:
.. _doxid-structvec3_1ac655348fa1a2c0d3d385d2459e1562f6:
.. _cid-vec3.dot:
.. _doxid-structvec3_1ae7a3973763304d807a68dda0f86337b0:
.. _cid-vec3.getdistancefrom:
.. _doxid-structvec3_1ad6234e7b6c96ab795ee393c1ef548e63:
.. _cid-vec3.getdistancesqfrom:
.. _doxid-structvec3_1a6674b1efaaac57850129ef90702d5c34:
.. _cid-vec3.getinterpolated:
.. _doxid-structvec3_1ab7b53ba275c7f75a77a7d183e9cbecc0:
.. _cid-vec3.getnormalized:
.. _doxid-structvec3_1a90d128c589dc520abe53c16ae8dc6e1e:
.. _cid-vec3.operator+:
.. _doxid-structvec3_1a9139586c1f4466e60f54e687e65267d2:
.. _cid-vec3.operator-:
.. _doxid-structvec3_1a66d5f27bd80bc2013ace3f90aa55bce3:
.. _cid-vec3.operator*:
.. _doxid-structvec3_1a1187b9c01f345a585834085a456d28c7:
.. _cid-vec3.operator.:
.. _doxid-structvec3_1a31072fcac0cfde09237466e025613362:
.. _cid-vec3.operator+-2:
.. _doxid-structvec3_1ae7cb32cfa90c34643ea65558b84962dc:
.. _cid-vec3.operator--2:
.. _doxid-structvec3_1a68f6e6aa8d1e96f7576fef1160664eb0:
.. _cid-vec3.operator*-2:
.. _doxid-structvec3_1ae6e2d3f04ac5a04f7996b7a877bfc8d3:
.. _cid-vec3.operator.-2:
.. _doxid-structvec3_1a0832a8fe4ab51d3062644ddbcde05f42:
.. _cid-vec3.operator+=:
.. _doxid-structvec3_1a76dbadcb1bb1e69528b7a2844cb7c2ea:
.. _cid-vec3.operator-=:
.. _doxid-structvec3_1a0590a2edc7b9f0ae6f11f1f3dd747c79:
.. _cid-vec3.operator*=:
.. _doxid-structvec3_1a67a1da9b6c4bb6bc13f8c461dcf27912:
.. _cid-vec3.operator.=:
.. _doxid-structvec3_1a2aa2f5d1b28ecfc9daef84f244b6596d:
.. _cid-vec3.operator+=-2:
.. _doxid-structvec3_1a40c4b7b38b43b648459d961c81a075e6:
.. _cid-vec3.operator-=-2:
.. _doxid-structvec3_1ada387f08968fa63743aa3b9961910d4f:
.. _cid-vec3.operator*=-2:
.. _doxid-structvec3_1a96da2909320944e1911f0350861a8a13:
.. _cid-vec3.operator.=-2:
.. _doxid-structvec3_1a4820504444d781da03fab2d33d1cf199:
.. _cid-vec3.operator--3:
.. _doxid-structvec3_1a84ef22aaed8805902667446ff3a2a84e:
.. _cid-vec3.operator<:
.. _doxid-structvec3_1a50076d99b80d3d972e31c0406cba75aa:
.. _cid-vec3.operator==:
.. _doxid-structvec3_1a0a086edc02279b0597f4ff4436e3ebc3:
.. _cid-vec3.operator!=:
.. _doxid-structvec3_1af08a245e9b6a2c869d7b02519679cb45:
.. _cid-vec3.equals:
.. _doxid-structvec3_1a2877c2f4c2350acf4926d44f22835870:
.. _cid-vec3.toglm:
.. _doxid-structvec3_1ada6b6a4be97bdca036f8eb78a7a1337b:
.. _cid-vec3.transform:
.. _doxid-structvec3_1a1501f6c76fcf4fa8df7be840554a2a80:
.. _cid-vec3.gettransformed:
.. _doxid-structvec3_1a3407f7dd3e8e9447551d73c66b7aa3fa:
.. _cid-vec3.rotatearound:
.. _doxid-structvec3_1af34d39fb7725e3e525e91f0455acea34:
.. _cid-vec3.xy:
.. _doxid-structvec3_1a037fcec087c6397164f936a5b4aced76:
.. _cid-vec3.yz:
.. _doxid-structvec3_1ae1de27ad57591f13730cfd2c4c7788f9:
.. _cid-vec3.xz:
.. _doxid-structvec3_1a646acde1d73d696092ceee4062d3ce50:
.. _cid-vec3.fromglm:
.. _doxid-structvec3_1a4b189dbfe0ea0c7d15cdddefa0bad535:
.. _cid-vec3.fromglm-2:
.. ref-code-block:: cpp
	:class: overview-code-block

	// fields

	T X
	T Y
	T Z

	// construction

	:ref:`vec3<doxid-structvec3_1afb7342872bc442bf0da6a7da1671e77e>` ()
	:ref:`vec3<doxid-structvec3_1ae11649effbbcd241d24cabe04514d9d2>` (T const in)

	:ref:`vec3<doxid-structvec3_1af10090d85baf92fff4ea9292ffba84b4>` (
	    T const x,
	    T const y,
	    T const z
	    )

	:ref:`vec3 <typename U><doxid-structvec3_1a69ad222aac458986e374dad3347dbf46>` (glm::tvec3 <U, glm::defaultp> const& v)
	:ref:`vec3 <typename U><doxid-structvec3_1a7dd8c3ca61f00373acf0d69773d8772e>` (:ref:`vec3<doxid-structvec3>` <U> const& vec)
	:ref:`vec3 <typename U><doxid-structvec3_1a2b87e8a71613b21c74e5c183771845bf>` (:ref:`vec2<doxid-structvec2>` <U> const& vec)

	// methods

	T :ref:`operator[]<doxid-structvec3_1ab0d2cbaa66cd4d20a3950d568397a4c3>` (int i)
	T& :ref:`operator[]<doxid-structvec3_1a67f6c293a8fd3c458645ae5d9ac2c9f4>` (int i)
	:ref:`vec3<doxid-structvec3>` <T>& :ref:`operator= <typename U><doxid-structvec3_1acd8e68bb5ccce4f402be548ad7557ffe>` (:ref:`vec3<doxid-structvec3>` <U> const& vec)
	void :ref:`reset<doxid-structvec3_1a76c480aaadefa985295b1443270822b1>` ()
	void :ref:`set<doxid-structvec3_1a9fb1ef8cd2127cd9c803d8767ed50c3f>` (T const in)
	void :ref:`set<doxid-structvec3_1a4adff972250500a6893a54c3b96985ae>` (T const in [])
	void :ref:`set <typename U><doxid-structvec3_1a28b32299cf389e8c7e877933cbf675ac>` (:ref:`vec3<doxid-structvec3>` <U> const& other)
	T :ref:`Length<doxid-structvec3_1a1d7e5faacde0340eba7c4495e481597c>` ()
	T :ref:`LengthSq<doxid-structvec3_1a79dc66b69115ce737ea416bed7c37a7d>` ()
	T Dot (:ref:`vec3<doxid-structvec3>` <T> const& other)
	T GetDistanceFrom (:ref:`vec3<doxid-structvec3>` <T> const& v)
	T const GetDistanceSqFrom (:ref:`vec3<doxid-structvec3>` <T> const& v)

	:ref:`vec3<doxid-structvec3>` <T> GetInterpolated <typename Real> (
	    :ref:`vec3<doxid-structvec3>` <T> const& v,
	    Real const d
	    )

	:ref:`vec3<doxid-structvec3>` <T> GetNormalized ()
	:ref:`vec3<doxid-structvec3>` <T>& :ref:`Normalize<doxid-structvec3_1a9eb47ad23b72bb1be4039da57b583465>` ()
	:ref:`vec3<doxid-structvec3>` <T> operator+ (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T> operator- (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T> operator* (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T> operator/ (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T> operator+ (T const s)
	:ref:`vec3<doxid-structvec3>` <T> operator- (T const s)
	:ref:`vec3<doxid-structvec3>` <T> operator* (T const s)
	:ref:`vec3<doxid-structvec3>` <T> operator/ (T const s)
	:ref:`vec3<doxid-structvec3>` <T>& operator+= (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T>& operator-= (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T>& operator*= (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T>& operator/= (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T>& operator+= (T const s)
	:ref:`vec3<doxid-structvec3>` <T>& operator-= (T const s)
	:ref:`vec3<doxid-structvec3>` <T>& operator*= (T const s)
	:ref:`vec3<doxid-structvec3>` <T>& operator/= (T const s)
	:ref:`vec3<doxid-structvec3>` <T> const operator- ()
	bool operator< (:ref:`vec3<doxid-structvec3>` <T> const& v)
	bool operator== (:ref:`vec3<doxid-structvec3>` <T> const& v)
	bool operator!= (:ref:`vec3<doxid-structvec3>` <T> const& v)

	bool Equals (
	    :ref:`vec3<doxid-structvec3>` <T> const& v,
	    T const Epsilon = :ref:`RoundingError<doxid-structRoundingError>` <T>::Value ()
	    )

	:ref:`vec3<doxid-structvec3>` <T> :ref:`CrossProduct<doxid-structvec3_1a17820205126c2f1cb022ddd3bbc8b3a0>` (:ref:`vec3<doxid-structvec3>` <T> const& v)
	:ref:`vec3<doxid-structvec3>` <T> :ref:`Cross<doxid-structvec3_1a52302c492bea3a2e890fbd3368cfc6c7>` (:ref:`vec3<doxid-structvec3>` <T> const& v)
	glm::vec3 const ToGLM ()

	void Transform (
	    glm::mat4 const& mat,
	    :ref:`f32<doxid-ionTypes_8h_1a5f6906312a689f27d70e9d086649d3fd>` const TranslateComponent = 1
	    )

	:ref:`vec3<doxid-structvec3>` <T> GetTransformed (
	    glm::mat4 const& mat,
	    :ref:`f32<doxid-ionTypes_8h_1a5f6906312a689f27d70e9d086649d3fd>` const TranslateComponent = 1
	    )

	:ref:`vec3<doxid-structvec3>` <T> RotateAround (
	    :ref:`vec3<doxid-structvec3>` <T> const& other,
	    :ref:`f32<doxid-ionTypes_8h_1a5f6906312a689f27d70e9d086649d3fd>` const radians
	    )

	:ref:`vec2<doxid-structvec2>` <T> XY ()
	:ref:`vec2<doxid-structvec2>` <T> YZ ()
	:ref:`vec2<doxid-structvec2>` <T> XZ ()
	:ref:`vec3<doxid-structvec3>` <T> FromGLM (glm::vec3 const& Vec)
	:ref:`vec3<doxid-structvec3>` <T> FromGLM (glm::vec4 const& Vec)

.. _details-doxid-structvec3:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Construction
------------

.. _doxid-structvec3_1afb7342872bc442bf0da6a7da1671e77e:
.. _cid-vec3.vec3:
.. ref-code-block:: cpp
	:class: title-code-block

	vec3 ()

Default constructor.

.. _doxid-structvec3_1ae11649effbbcd241d24cabe04514d9d2:
.. _cid-vec3.vec3-2:
.. ref-code-block:: cpp
	:class: title-code-block

	vec3 (T const in)

Scalar constructor.

.. _doxid-structvec3_1af10090d85baf92fff4ea9292ffba84b4:
.. _cid-vec3.vec3-3:
.. ref-code-block:: cpp
	:class: title-code-block

	vec3 (
	    T const x,
	    T const y,
	    T const z
	    )

Explicit constructor.

.. _doxid-structvec3_1a69ad222aac458986e374dad3347dbf46:
.. _cid-vec3.vec3-4:
.. ref-code-block:: cpp
	:class: title-code-block

	vec3 <typename U> (glm::tvec3 <U, glm::defaultp> const& v)

GLM constructor.

.. _doxid-structvec3_1a7dd8c3ca61f00373acf0d69773d8772e:
.. _cid-vec3.vec3-5:
.. ref-code-block:: cpp
	:class: title-code-block

	vec3 <typename U> (:ref:`vec3<doxid-structvec3>` <U> const& vec)

Generic :ref:`vec3 <doxid-structvec3>` constructor.

.. _doxid-structvec3_1a2b87e8a71613b21c74e5c183771845bf:
.. _cid-vec3.vec3-6:
.. ref-code-block:: cpp
	:class: title-code-block

	vec3 <typename U> (:ref:`vec2<doxid-structvec2>` <U> const& vec)

Generic :ref:`vec2 <doxid-structvec2>` constructor.

Methods
-------

.. _doxid-structvec3_1ab0d2cbaa66cd4d20a3950d568397a4c3:
.. _cid-vec3.operator[]:
.. ref-code-block:: cpp
	:class: title-code-block

	T operator[] (int i)

Note: Out-of-bounds access returns a dummy value without error.

.. _doxid-structvec3_1a67f6c293a8fd3c458645ae5d9ac2c9f4:
.. _cid-vec3.operator[]-2:
.. ref-code-block:: cpp
	:class: title-code-block

	T& operator[] (int i)

Note: Out-of-bounds access returns a dummy value without error.

.. _doxid-structvec3_1acd8e68bb5ccce4f402be548ad7557ffe:
.. _cid-vec3.operator=:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`vec3<doxid-structvec3>` <T>& operator= <typename U> (:ref:`vec3<doxid-structvec3>` <U> const& vec)

Generic vector assignment operator.

.. _doxid-structvec3_1a76c480aaadefa985295b1443270822b1:
.. _cid-vec3.reset:
.. ref-code-block:: cpp
	:class: title-code-block

	void reset ()

Sets all values to 0.

.. _doxid-structvec3_1a9fb1ef8cd2127cd9c803d8767ed50c3f:
.. _cid-vec3.set:
.. ref-code-block:: cpp
	:class: title-code-block

	void set (T const in)

Sets all values to a single scalar.

.. _doxid-structvec3_1a4adff972250500a6893a54c3b96985ae:
.. _cid-vec3.set-2:
.. ref-code-block:: cpp
	:class: title-code-block

	void set (T const in [])

Sets all values by an input C-style array.

.. _doxid-structvec3_1a28b32299cf389e8c7e877933cbf675ac:
.. _cid-vec3.set-3:
.. ref-code-block:: cpp
	:class: title-code-block

	void set <typename U> (:ref:`vec3<doxid-structvec3>` <U> const& other)

Sets all values by an input vector.

.. _doxid-structvec3_1a1d7e5faacde0340eba7c4495e481597c:
.. _cid-vec3.length:
.. ref-code-block:: cpp
	:class: title-code-block

	T Length ()

Length of vector.

.. _doxid-structvec3_1a79dc66b69115ce737ea416bed7c37a7d:
.. _cid-vec3.lengthsq:
.. ref-code-block:: cpp
	:class: title-code-block

	T LengthSq ()

Squared-length of vector (computationally fast)

.. _doxid-structvec3_1a9eb47ad23b72bb1be4039da57b583465:
.. _cid-vec3.normalize:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`vec3<doxid-structvec3>` <T>& Normalize ()

Normalize this vector.

.. _doxid-structvec3_1a17820205126c2f1cb022ddd3bbc8b3a0:
.. _cid-vec3.crossproduct:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`vec3<doxid-structvec3>` <T> CrossProduct (:ref:`vec3<doxid-structvec3>` <T> const& v)

Vector cross product.

.. _doxid-structvec3_1a52302c492bea3a2e890fbd3368cfc6c7:
.. _cid-vec3.cross:
.. ref-code-block:: cpp
	:class: title-code-block

	:ref:`vec3<doxid-structvec3>` <T> Cross (:ref:`vec3<doxid-structvec3>` <T> const& v)

Vector cross product.

